name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

# Prevent multiple workflows from running concurrently on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Turborepo Remote Caching (using GitHub Actions cache)
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

  # Supabase
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

  # Redis
  REDIS_URL: ${{ secrets.REDIS_URL }}

jobs:
  # Job 1: Lint and Type Check (fast)
  lint:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # For Turborepo to detect changed files

      - name: 📦 Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔧 Setup Turborepo Remote Cache (GitHub Actions)
        uses: rharkor/caching-for-turbo@v1.5

      - name: 🔍 Lint
        run: pnpm turbo lint

      - name: 🔍 Type Check
        run: pnpm turbo typecheck

  # Job 2: Test (parallel with lint)
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 📦 Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔧 Setup Turborepo Remote Cache (GitHub Actions)
        uses: rharkor/caching-for-turbo@v1.5

      - name: 🧪 Run tests
        run: pnpm turbo test -- --coverage

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./apps/web/coverage/coverage-final.json,./packages/*/coverage/coverage-final.json
          fail_ci_if_error: false

  # Job 3: Build (depends on lint and test passing)
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [lint, test]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 📦 Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔧 Setup Turborepo Remote Cache (GitHub Actions)
        uses: rharkor/caching-for-turbo@v1.5

      - name: 🏗️ Build all apps and packages
        run: pnpm turbo build
        env:
          # Build-time environment variables
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: 📦 Cache build artifacts
        uses: actions/cache/save@v4
        with:
          path: |
            apps/web/.next
            apps/admin/.next
            apps/strapi/build
          key: build-${{ github.sha }}

  # Job 4: Accessibility Testing (IS-5568 compliance)
  accessibility:
    name: ♿ Accessibility Testing
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 📦 Restore build artifacts
        uses: actions/cache/restore@v4
        with:
          path: |
            apps/web/.next
            apps/admin/.next
          key: build-${{ github.sha }}

      - name: ♿ Run Axe accessibility tests
        run: pnpm turbo test:a11y
        continue-on-error: true # Don't fail CI, but report issues

      - name: 📊 Upload accessibility report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-report
          path: apps/web/a11y-report.html

  # Job 5: Security Scan
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📚 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔒 Run npm audit
        run: pnpm audit --audit-level=high
        continue-on-error: true

      - name: 🔍 Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects

  # Job 6: Database Migrations Check (Supabase)
  database:
    name: 🗄️ Database Migrations
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: 🗄️ Verify migrations
        run: |
          supabase init
          supabase db lint
        working-directory: ./

      - name: 🧪 Test migrations on local Supabase
        run: |
          supabase start
          supabase db reset
          supabase db push
        working-directory: ./

  # Job 7: Generate deployment summary
  summary:
    name: 📋 Deployment Summary
    runs-on: ubuntu-latest
    needs: [build, accessibility, security, database]
    if: always()

    steps:
      - name: 📊 Generate summary
        run: |
          echo "## 🚀 CI Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Job Results" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Lint: ${{ needs.lint.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Test: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Build: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Accessibility: ${{ needs.accessibility.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Security: ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Database: ${{ needs.database.result }}" >> $GITHUB_STEP_SUMMARY
